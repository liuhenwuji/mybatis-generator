<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 该配置文件说明插件需要如何生成，以及生成对应的包名，路径等信息。
      还有重要的就是我们要生成的实体类所对应的的表或者试图 -->
<generatorConfiguration>
    <properties resource="mybatis_generator_sgs.properties"/>


    <context id="MBG" targetRuntime="MyBatis3" defaultModelType="conditional">

        <!-- 注意以下标签的顺序:property*,plugin*,commentGenerator?,jdbcConnection,
                javaTypeResolver?,javaModelGenerator,sqlMapGenerator?,
                javaClientGenerator?,table+ -->
        <property name="useActualColumnNames" value="false" />
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        <!-- 这个插件给由MBG生成的Java模型对象增加了equals和hashCode方法 -->
        <!--<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>-->
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
            <!-- 不希望生成的注释中包含时间戳 -->
            <property name="suppressDate" value="true"/>
            <!-- 是否  自动为每一个生成的类创建一个构造方法-->
            <property name="constructorBased" value="false"/>
        </commentGenerator>
        <!-- 数据库连接 -->
        <jdbcConnection
                driverClass="${jdbc_driver}"
                connectionURL="${jdbc_url}"
                userId="${jdbc_username}"
                password="${jdbc_password}">
        </jdbcConnection>
        <!-- 指定生成的类型为java类型，避免数据库中number等类型字段 -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 生成model模型，对应的包，存放位置可以指定具体的路径,如/ProjectName/src，也可以使用MAVEN来自动生成 -->
        <javaModelGenerator targetPackage="${modelPackage}" targetProject="${targetProject}">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <!--<property name="enableSubPackages" value="true"/>-->
            <!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!--对应的xml mapper文件  -->
        <sqlMapGenerator targetPackage="${sqlMapperPackage}" targetProject="${targetProject}">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- 对应的dao接口 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${daoMapperPackage}" targetProject="${targetProject}">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 表名对应生成的实体 -->
        <table tableName="alarm" domainObjectName="Alarm"/>
        <table tableName="sensor" domainObjectName="Sensor"/>
        <table tableName="dcu" domainObjectName="Dcu"/>
        <table tableName="recorder" domainObjectName="Recorder"/>

        <!--<table tableName="alarm_record" domainObjectName="AlarmRecord"/>-->
        <!--<table tableName="annex" domainObjectName="Annex"/>-->
        <!--<table tableName="area" domainObjectName="Area"/>-->
        <!--<table tableName="area2" domainObjectName="Area2"/>-->
        <!--<table tableName="connection" domainObjectName="Connection"/>-->
        <!--<table tableName="current_pro" domainObjectName="CurrentPro"/>-->
        <!--<table tableName="dcu_data" domainObjectName="DcuData"/>-->
        <!--<table tableName="department" domainObjectName="Department"/>-->
        <!--<table tableName="dictionary" domainObjectName="Dictionary"/>-->
        <!--<table tableName="document" domainObjectName="Document"/>-->
        <!--<table tableName="employee" domainObjectName="Employee"/>-->
        <!--<table tableName="erplog" domainObjectName="Erplog"/>-->
        <!--<table tableName="function" domainObjectName="Function"/>-->
        <!--<table tableName="item" domainObjectName="Item"/>-->
        <!--<table tableName="module" domainObjectName="Module"/>-->
        <!--<table tableName="node" domainObjectName="Node"/>-->
        <!--<table tableName="nv_data" domainObjectName="NvData"/>-->
        <!--<table tableName="nv_log" domainObjectName="NvLog"/>-->
        <!--<table tableName="nv_param" domainObjectName="NvParam"/>-->
        <!--<table tableName="phase" domainObjectName="Phase"/>-->
        <!--<table tableName="re_fun_role" domainObjectName="ReFunRole"/>-->
        <!--<table tableName="re_general" domainObjectName="ReGeneral"/>-->
        <!--<table tableName="re_module_role" domainObjectName="ReModule_role"/>-->
        <!--<table tableName="re_user_area2" domainObjectName="ReUserArea2"/>-->
        <!--<table tableName="re_user_role" domainObjectName="ReUserRole"/>-->
        <!--<table tableName="recorder_diff" domainObjectName="RecorderDiff"/>-->
        <!--<table tableName="recorder_log" domainObjectName="RecorderLog"/>-->
        <!--<table tableName="ro_data" domainObjectName="RoData"/>-->
        <!--<table tableName="role" domainObjectName="Role"/>-->
        <!--<table tableName="sgs" domainObjectName="Sgs"/>-->
        <!--<table tableName="statistics" domainObjectName="Statistics"/>-->
        <!--<table tableName="status" domainObjectName="Status"/>-->
        <!--<table tableName="task" domainObjectName="Task"/>-->
        <!--<table tableName="tasklog" domainObjectName="Tasklog"/>-->
        <!--<table tableName="temp_dif" domainObjectName="TempDif"/>-->
        <!--<table tableName="v_dictionary" domainObjectName="VDictionary"/>-->


        <!-- enableCountByExample="false" enableUpdateByExample="false"
        enableDeleteByExample="false" enableSelectByExample="false"
        selectByExampleQueryId="false">  指定是否生成操作数据库对应的方法 -->
    </context>
</generatorConfiguration>