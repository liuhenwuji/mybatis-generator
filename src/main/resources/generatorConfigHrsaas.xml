<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 该配置文件说明插件需要如何生成，以及生成对应的包名，路径等信息。
      还有重要的就是我们要生成的实体类所对应的的表或者试图 -->
<generatorConfiguration>
    <properties resource="mybatis_generator_hrsaas.properties"/>


    <context id="MBG" targetRuntime="MyBatis3Simple" defaultModelType="conditional">

        <!-- 注意以下标签的顺序:property*,plugin*,commentGenerator?,jdbcConnection,
                javaTypeResolver?,javaModelGenerator,sqlMapGenerator?,
                javaClientGenerator?,table+ -->
        <property name="useActualColumnNames" value="false" />
        <!--<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>-->
        <plugin type="org.mybatis.generator.plugins.LombokPlugin" >
            <property name="hasLombok" value="true"/>
        </plugin>
        <!-- 这个插件给由MBG生成的Java模型对象增加了equals和hashCode方法 -->
        <!--<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>-->
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
            <!-- 不希望生成的注释中包含时间戳 -->
            <property name="suppressDate" value="true"/>
            <!-- 是否  自动为每一个生成的类创建一个构造方法-->
            <property name="constructorBased" value="false"/>
        </commentGenerator>
        <!-- 数据库连接 -->
        <jdbcConnection
                driverClass="${jdbc_driver}"
                connectionURL="${jdbc_url}"
                userId="${jdbc_username}"
                password="${jdbc_password}">
        </jdbcConnection>
        <!-- 指定生成的类型为java类型，避免数据库中number等类型字段 -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 生成model模型，对应的包，存放位置可以指定具体的路径,如/ProjectName/src，也可以使用MAVEN来自动生成 -->
        <javaModelGenerator targetPackage="${modelPackage}" targetProject="${targetProject}">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <!--<property name="enableSubPackages" value="true"/>-->
            <!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!--对应的xml mapper文件  -->
        <sqlMapGenerator targetPackage="${sqlMapperPackage}" targetProject="${targetProject}">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- 对应的dao接口 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${daoMapperPackage}" targetProject="${targetProject}">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 表名对应生成的实体 -->
        <table tableName="ACCOUNT" domainObjectName="account"/>
        <table tableName="ACCOUNT_COMPANY_REF" domainObjectName="account_company_ref"/>
        <table tableName="ACCOUNT_LOGIN_TRACK" domainObjectName="account_login_track"/>
        <table tableName="ANNUAL_RULE_TEMPLATE" domainObjectName="annual_rule_template"/>
        <table tableName="APP_VERSION" domainObjectName="app_version"/>
        <table tableName="AREA" domainObjectName="area"/>
        <table tableName="CANDIDATE_CONFIG_OPERATE_LOG" domainObjectName="candidate_config_operate_log"/>
        <table tableName="CANDIDATE_FIELD" domainObjectName="candidate_field"/>
        <table tableName="CANDIDATE_FIELD_CATEGORY" domainObjectName="candidate_field_category"/>
        <table tableName="CANDIDATE_FIELD_CONFIG" domainObjectName="candidate_field_config"/>
        <table tableName="CANDIDATE_FIELD_VALUE" domainObjectName="candidate_field_value"/>
        <table tableName="CANDIDATE_TEMPLATE" domainObjectName="candidate_template"/>
        <table tableName="CANDIDATE_VALUE" domainObjectName="candidate_value"/>
        <table tableName="CITY" domainObjectName="city"/>
        <table tableName="COMMON_CONFIG" domainObjectName="common_config"/>
        <table tableName="COMPANYREF" domainObjectName="companyref"/>
        <table tableName="CONSUMER" domainObjectName="consumer"/>
        <table tableName="DATASOURCE_CONFIG" domainObjectName="datasource_config"/>
        <table tableName="DICTIONARIES" domainObjectName="dictionaries"/>
        <table tableName="DIRECTORY" domainObjectName="directory"/>
        <table tableName="DISPATCH_POSITION" domainObjectName="dispatch_position"/>
        <table tableName="EMOLUMENT_FIELD_TEMPLATE" domainObjectName="emolument_field_template"/>
        <table tableName="EMOLUMENT_FIELD_TEMPLATE_copy1" domainObjectName="emolument_field_template_copy1"/>
        <table tableName="EMPINFO" domainObjectName="empinfo"/>
        <table tableName="EMPINFO_TIMING" domainObjectName="empinfo_timing"/>
        <table tableName="FUNC_MODULE" domainObjectName="func_module"/>
        <table tableName="FUNC_PERM_MODULE" domainObjectName="func_perm_module"/>
        <table tableName="HOLIDAY" domainObjectName="holiday"/>
        <table tableName="INSURED_INST" domainObjectName="insured_inst"/>
        <table tableName="LEAVE_INFO_TEMPLATE" domainObjectName="leave_info_template"/>
        <table tableName="PERM_MODULE" domainObjectName="perm_module"/>
        <table tableName="PLATFORM_ACCOUNT" domainObjectName="platform_account"/>
        <table tableName="PLATFORM_LOG" domainObjectName="platform_log"/>
        <table tableName="QRTZ_BLOB_TRIGGERS" domainObjectName="qrtz_blob_triggers"/>
        <table tableName="QRTZ_CALENDARS" domainObjectName="qrtz_calendars"/>
        <table tableName="QRTZ_CRON_TRIGGERS" domainObjectName="qrtz_cron_triggers"/>
        <table tableName="QRTZ_FIRED_TRIGGERS" domainObjectName="qrtz_fired_triggers"/>
        <table tableName="QRTZ_JOB_DETAILS" domainObjectName="qrtz_job_details"/>
        <table tableName="QRTZ_LOCKS" domainObjectName="qrtz_locks"/>
        <table tableName="QRTZ_PAUSED_TRIGGER_GRPS" domainObjectName="qrtz_paused_trigger_grps"/>
        <table tableName="QRTZ_SCHEDULER_STATE" domainObjectName="qrtz_scheduler_state"/>
        <table tableName="QRTZ_SIMPLE_TRIGGERS" domainObjectName="qrtz_simple_triggers"/>
        <table tableName="QRTZ_SIMPROP_TRIGGERS" domainObjectName="qrtz_simprop_triggers"/>
        <table tableName="QRTZ_TRIGGERS" domainObjectName="qrtz_triggers"/>
        <table tableName="SMS_CODECOUNT" domainObjectName="sms_codecount"/>
        <table tableName="SMS_CODETYPE" domainObjectName="sms_codetype"/>
        <table tableName="SOCIAL_SECURITY_SCHEME" domainObjectName="social_security_scheme"/>
        <table tableName="STAFF_WECHAT" domainObjectName="staff_wechat"/>



        <!-- enableCountByExample="false" enableUpdateByExample="false"
        enableDeleteByExample="false" enableSelectByExample="false"
        selectByExampleQueryId="false">  指定是否生成操作数据库对应的方法 -->
    </context>
</generatorConfiguration>